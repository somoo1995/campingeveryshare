<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
  <mapper namespace="web.dao.face.ShareDao">
	<resultMap type="Map" id="Map">
		<result property="content" column="content" javaType="java.lang.String" jdbcType="CLOB"/>
	</resultMap>

  	<select id="selectShareAll" parameterType="web.util.Paging" resultType="Map">
      	SELECT * FROM (
	  	SELECT ROWNUM rnum, B.* FROM (
			SELECT board_no
			, title
			, location
			, CAST(post_date AS DATE) AS post_date
			, hit 
			, content
			, delete_status
			, board_cate
			, (SELECT user_name FROM usertb WHERE user_id = boardtb.user_id) AS "USER_NAME" 
			, (SELECT user_nick FROM usertb WHERE user_id = boardtb.user_id) AS "USER_NICK" 
			, (SELECT COUNT(*) FROM recomtb WHERE recom_no = boardtb.board_no AND board_cate = 2) AS "RECOM"
            , (SELECT stored_name FROM (SELECT stored_name, ROWNUM as rnum FROM boardfiletb WHERE board_no = boardtb.board_no ORDER BY file_no) WHERE rnum = 1) AS "THUMBNAIL_NAME"
			, (SELECT loc_name_ko FROM location_category WHERE loc_cate = boardtb.location) AS "LOCATION_NAME"
			, user_id
			FROM boardtb
			WHERE board_cate = 2
			AND delete_status = 0
			ORDER BY board_no DESC
	    ) B
	) WHERE rnum BETWEEN #{startNo} AND #{endNo}

  	</select>
  
  	<select id="selectCntAll">
  		SELECT count(*) FROM boardtb
  	</select>
  
  	<select id="selectBoardView" resultType="board" parameterType="board">
	SELECT
	    board_no,
	    title,
	    location,
		CAST(post_date AS DATE) AS post_date,
	    hit,
	    content,
	    delete_status,
	    board_cate,
	    user_id,
	    (SELECT COUNT(*) FROM recomtb WHERE recom_no = boardtb.board_no AND user_id = #{userId} AND board_cate = 2) AS "RECOM"
	    
	FROM boardtb
	WHERE board_no = #{boardNo }
  	</select>
  	
  	<select id="selectByUserNick" resultType="user" parameterType="user">
  	SELECT user_nick
  	FROM usertb
  	WHERE user_id = #{userId }
  	</select>
  	
  	<update id="hit" parameterType="board">
  		UPDATE boardtb
  		SET hit = hit+1
  		WHERE board_no = #{boardNo}
  	</update>

	<select id="selectGetFileByBoardNo" resultType="boardfile" parameterType="boardfile">
		SELECT file_no, origin_name, stored_name, board_no, board_cate
		FROM boardfiletb
		WHERE board_no = #{boardNo}
	</select>
	
  	<insert id="insertShareWrite" parameterType="board">
		<selectKey order="BEFORE"  resultType="int" keyProperty="boardNo">
			SELECT board_seq.nextval FROM dual
		</selectKey> 
  		INSERT INTO boardtb (board_no, title,content, user_id, board_cate, location)
  		VALUES (#{boardNo}, #{title}, #{content}, #{userId}, #{boardCate}, #{location} )
  	</insert>

	<insert id="insertShareFile" parameterType="boardfile">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
			SELECT file_seq.nextval FROM dual
		</selectKey>
		INSERT INTO boardfiletb ( file_no, origin_name, stored_name , board_no, board_cate)
		VALUES ( #{fileNo}, #{originName}, #{storedName}, #{boardNo}, #{boardCate})
	</insert>  
  
  	<select id="selectShareFileByBoardNo" resultType="boardfile" parameterType="board">
  		SELECT file_no, origin_name, stored_name, board_no, board_cate
  		FROM boardfiletb
  		WHERE board_no = #{boardNo }
  	</select>
  
  	<update id="updateProc" parameterType="board">
  		UPDATE boardtb
  		SET title = #{title }
  			, content = #{content }
		WHERE board_no = #{boardNo } 
  	</update>
  
  	<delete id="deleteFiles" parameterType="int[]">
  		DELETE boardfiletb
  		WHERE file_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
  	</delete>
  	
  	<delete id="deleteFileByBoardNo" parameterType="boardfile">
 		DELETE boardfiletb
 		WHERE board_no = #{boardNo} 	
  	</delete>

  	<delete id="deleteByBoardNo" parameterType="board">
 		DELETE boardtb
 		WHERE board_no = #{boardNo} 	
  	</delete>
  	
  </mapper>