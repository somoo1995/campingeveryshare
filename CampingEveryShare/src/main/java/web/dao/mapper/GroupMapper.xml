<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.dao.face.GroupDao">
	
	<!-- 사용하는 테이블 정리 -->
	
	<sql id="selectBoard">
		SELECT
		board_no, title, location, post_date, hit, content, delete_status, user_id, board_cate
		, (SELECT user_nick FROM userTB WHERE user_id=boardtb.user_id)
		FROM boardtb
		WHERE board_cate = 4
	</sql>
	
	<sql id="selectGroup">
		SELECT
			board_no, recruit_status
		FROM grouptb
	</sql>
	
	<sql id="selectRecom">
		SELECT
			userId, recoNo, boardCate
		FROM recomtb
	</sql>
	
	<sql id="selectUser">
		SELECT
			user_id, user_pw, email, user_name
				,user_nick, birth, address
				,address_detail, phone, profile
				,join_date, user_status
		FROM usertb
	</sql>
		
	<!-- 1. 게시판 목록 조회 -->
	
	<select id="selectCntAll" resultType="int" parameterType="int">
	    SELECT COUNT(*)
	    FROM boardtb
	    WHERE board_cate = 4	
	</select>


		<!-- boardtb에서만 가져오는 거 -->
	<select id="selectBoardList" parameterType="web.util.Paging" resultType="Map">
	  SELECT * FROM (
	    SELECT
	      ROWNUM AS rnum,
	      board_no,
	      title,
	      location,
	      post_date,
	      hit,
	      content,
	      delete_status,
	      user_id,
	      board_cate,
	      (SELECT user_nick FROM userTB WHERE user_id = b.user_id) AS user_nick
	    FROM boardTB b
	    WHERE board_cate = 4
	    ORDER BY board_no DESC
	  ) subquery
	  WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
		
		<!-- user + board -->
		<select id="selectUserNick" resultType="Map" parameterType="web.util.Paging">
	    SELECT * FROM (
	        SELECT 
	            ROWNUM AS rnum,
	            user_nick
	        FROM (
	            SELECT 
	                board_no, title, location, post_date, hit, content, delete_status, user_id, board_cate, 
	                (SELECT user_nick FROM userTB WHERE user_id = boardtb.user_id) AS user_nick
	            FROM boardTB
	            WHERE board_cate = 4
	            ORDER BY board_no DESC
	        )
	    ) WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
		

	<!-- 2. 게시판 상세 조회 -->
	<!-- 2-1. 조회수 -->
	<update id="updateHit" parameterType="Board">
		UPDATE boardtb
		<set>
			hit = hit + 1,
		</set>
		<where>
			AND board_no = #{boardNo}
		</where>
	</update>
	
<!-- 	 /group/view 게시글 상세 조회 -->
<!--    2-2. 게시글 및 유저 정보 가져오기(댓글 x) -->
   <select id="selectBoardView" resultType="Map" parameterType="Map">
      SELECT 
          B.board_no, B.title, B.location, B.post_date, B.hit, B.content, B.delete_status, B.user_id, U.user_nick, U.profile, G.recruit_status
      FROM (   <include refid="selectBoard" /> ) B
      FULL OUTER JOIN ( <include refid="selectUser" />) U ON B.user_id = U.user_id
      FULL OUTER JOIN (<include refid="selectGroup" />) G ON B.board_no = G.board_no
      WHERE B.board_no = #{boardNo} AND B.board_cate = 4
   </select>
	
	<select id="selectByContent" resultMap="contentView">
		SELECT content
		FROM boardtb
		WHERE board_no = #{boardNo}
		AND board_cate = 4
	</select>
	
	<resultMap type="Map" id="contentView">
		<id property="content" column="content" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	
	<select id="selectByRecruit" resultType="Map" parameterType="Map">
		select recruit_status
		FROM grouptb
		WHERE board_no = #{boardNo}
	</select>
	

	<insert id="insert" parameterType="Board">
	    <!-- boardtb 테이블에 데이터 삽입 -->
	    <selectKey order="BEFORE" resultType="int" keyProperty="boardNo">
	        SELECT board_seq.nextval FROM dual
	    </selectKey>
	    INSERT INTO boardtb (board_no, title, location, user_id, content, board_cate)
	    VALUES (#{boardNo}, #{title}, #{location}, #{userId}, #{content}, 4)
	</insert>

	<insert id="insertGroup" parameterType="Group">
	INSERT INTO grouptb (board_no, recruit_status)
	VALUES (#{boardNo}, #{recruitStatus})
	</insert>

	<update id="update" parameterType="Board">
			UPDATE boardtb
		<set>
			, title = #{title }
			, content = #{content }
		</set>
		<where>
			board_no = #{boardNo }
		</where>
	</update>




</mapper>

